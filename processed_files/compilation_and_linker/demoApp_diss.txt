
processed_files/demoApp:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	ins    BYTE PTR es:[rdi],dx
 31a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 321:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 326:	78 2d                	js     355 <__abi_tag-0x37>
 328:	78 38                	js     362 <__abi_tag-0x2a>
 32a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 331:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    al,0x0
 33a:	00 00                	add    BYTE PTR [rax],al
 33c:	20 00                	and    BYTE PTR [rax],al
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	05 00 00 00 47       	add    eax,0x47000000
 345:	4e 55                	rex.WRX push rbp
 347:	00 02                	add    BYTE PTR [rdx],al
 349:	00 00                	add    BYTE PTR [rax],al
 34b:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 34f:	00 03                	add    BYTE PTR [rbx],al
 351:	00 00                	add    BYTE PTR [rax],al
 353:	00 00                	add    BYTE PTR [rax],al
 355:	00 00                	add    BYTE PTR [rax],al
 357:	00 02                	add    BYTE PTR [rdx],al
 359:	80 00 c0             	add    BYTE PTR [rax],0xc0
 35c:	04 00                	add    al,0x0
 35e:	00 00                	add    BYTE PTR [rax],al
 360:	01 00                	add    DWORD PTR [rax],eax
 362:	00 00                	add    BYTE PTR [rax],al
 364:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    al,0x0
 36a:	00 00                	add    BYTE PTR [rax],al
 36c:	14 00                	adc    al,0x0
 36e:	00 00                	add    BYTE PTR [rax],al
 370:	03 00                	add    eax,DWORD PTR [rax]
 372:	00 00                	add    BYTE PTR [rax],al
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push rbp
 377:	00 3d 00 34 0c 52    	add    BYTE PTR [rip+0x520c3400],bh        # 520c377d <_end+0x520bf765>
 37d:	ec                   	in     al,dx
 37e:	e7 61                	out    0x61,eax
 380:	44                   	rex.R
 381:	43 76 a9             	rex.XB jbe 32d <__abi_tag-0x5f>
 384:	fe                   	(bad)  
 385:	13 93 4d 3c f5 38    	adc    edx,DWORD PTR [rbx+0x38f53c4d]
 38b:	c8                   	.byte 0xc8

Disassembly of section .note.ABI-tag:

000000000000038c <__abi_tag>:
 38c:	04 00                	add    al,0x0
 38e:	00 00                	add    BYTE PTR [rax],al
 390:	10 00                	adc    BYTE PTR [rax],al
 392:	00 00                	add    BYTE PTR [rax],al
 394:	01 00                	add    DWORD PTR [rax],eax
 396:	00 00                	add    BYTE PTR [rax],al
 398:	47                   	rex.RXB
 399:	4e 55                	rex.WRX push rbp
 39b:	00 00                	add    BYTE PTR [rax],al
 39d:	00 00                	add    BYTE PTR [rax],al
 39f:	00 03                	add    BYTE PTR [rbx],al
 3a1:	00 00                	add    BYTE PTR [rax],al
 3a3:	00 02                	add    BYTE PTR [rdx],al
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	00 00                	add    BYTE PTR [rax],al
 3a9:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003b0 <.gnu.hash>:
 3b0:	02 00                	add    al,BYTE PTR [rax]
 3b2:	00 00                	add    BYTE PTR [rax],al
 3b4:	05 00 00 00 01       	add    eax,0x1000000
 3b9:	00 00                	add    BYTE PTR [rax],al
 3bb:	00 06                	add    BYTE PTR [rsi],al
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 00                	add    BYTE PTR [rax],al
 3c1:	00 81 00 00 00 00    	add    BYTE PTR [rcx+0x0],al
 3c7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3cd <__abi_tag+0x41>
 3cd:	00 00                	add    BYTE PTR [rax],al
 3cf:	00 d1                	add    cl,dl
 3d1:	65 ce                	gs (bad) 
 3d3:	6d                   	ins    DWORD PTR es:[rdi],dx

Disassembly of section .dynsym:

00000000000003d8 <.dynsym>:
	...
 3f0:	10 00                	adc    BYTE PTR [rax],al
 3f2:	00 00                	add    BYTE PTR [rax],al
 3f4:	12 00                	adc    al,BYTE PTR [rax]
	...
 406:	00 00                	add    BYTE PTR [rax],al
 408:	43 00 00             	rex.XB add BYTE PTR [r8],al
 40b:	00 20                	add    BYTE PTR [rax],ah
	...
 41d:	00 00                	add    BYTE PTR [rax],al
 41f:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 422:	00 00                	add    BYTE PTR [rax],al
 424:	20 00                	and    BYTE PTR [rax],al
	...
 436:	00 00                	add    BYTE PTR [rax],al
 438:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 439:	00 00                	add    BYTE PTR [rax],al
 43b:	00 20                	add    BYTE PTR [rax],ah
	...
 44d:	00 00                	add    BYTE PTR [rax],al
 44f:	00 01                	add    BYTE PTR [rcx],al
 451:	00 00                	add    BYTE PTR [rax],al
 453:	00 22                	add    BYTE PTR [rdx],ah
	...

Disassembly of section .dynstr:

0000000000000468 <.dynstr>:
 468:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 46b:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 46e:	5f                   	pop    rdi
 46f:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 475:	7a 65                	jp     4dc <__abi_tag+0x150>
 477:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 47a:	6c                   	ins    BYTE PTR es:[rdi],dx
 47b:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 482:	72 74                	jb     4f8 <__abi_tag+0x16c>
 484:	5f                   	pop    rdi
 485:	6d                   	ins    DWORD PTR es:[rdi],dx
 486:	61                   	(bad)  
 487:	69 6e 00 6c 69 62 63 	imul   ebp,DWORD PTR [rsi+0x0],0x6362696c
 48e:	2e 73 6f             	cs jae 500 <__abi_tag+0x174>
 491:	2e 36 00 47 4c       	cs ss add BYTE PTR [rdi+0x4c],al
 496:	49                   	rex.WB
 497:	42                   	rex.X
 498:	43 5f                	rex.XB pop r15
 49a:	32 2e                	xor    ch,BYTE PTR [rsi]
 49c:	32 2e                	xor    ch,BYTE PTR [rsi]
 49e:	35 00 47 4c 49       	xor    eax,0x494c4700
 4a3:	42                   	rex.X
 4a4:	43 5f                	rex.XB pop r15
 4a6:	32 2e                	xor    ch,BYTE PTR [rsi]
 4a8:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
 4ab:	5f                   	pop    rdi
 4ac:	49 54                	rex.WB push r12
 4ae:	4d 5f                	rex.WRB pop r15
 4b0:	64 65 72 65          	fs gs jb 519 <__abi_tag+0x18d>
 4b4:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 4bb:	4d 
 4bc:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 4be:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4c0:	65 54                	gs push rsp
 4c2:	61                   	(bad)  
 4c3:	62                   	(bad)  
 4c4:	6c                   	ins    BYTE PTR es:[rdi],dx
 4c5:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 4c9:	67 6d                	ins    DWORD PTR es:[edi],dx
 4cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4cc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4cd:	5f                   	pop    rdi
 4ce:	73 74                	jae    544 <__abi_tag+0x1b8>
 4d0:	61                   	(bad)  
 4d1:	72 74                	jb     547 <__abi_tag+0x1bb>
 4d3:	5f                   	pop    rdi
 4d4:	5f                   	pop    rdi
 4d5:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 4d8:	54                   	push   rsp
 4d9:	4d 5f                	rex.WRB pop r15
 4db:	72 65                	jb     542 <__abi_tag+0x1b6>
 4dd:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 4e4:	4d 
 4e5:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 4e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4e8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4e9:	65 54                	gs push rsp
 4eb:	61                   	(bad)  
 4ec:	62                   	.byte 0x62
 4ed:	6c                   	ins    BYTE PTR es:[rdi],dx
 4ee:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000004f0 <.gnu.version>:
 4f0:	00 00                	add    BYTE PTR [rax],al
 4f2:	02 00                	add    al,BYTE PTR [rax]
 4f4:	01 00                	add    DWORD PTR [rax],eax
 4f6:	01 00                	add    DWORD PTR [rax],eax
 4f8:	01 00                	add    DWORD PTR [rax],eax
 4fa:	03 00                	add    eax,DWORD PTR [rax]

Disassembly of section .gnu.version_r:

0000000000000500 <.gnu.version_r>:
 500:	01 00                	add    DWORD PTR [rax],eax
 502:	02 00                	add    al,BYTE PTR [rax]
 504:	22 00                	and    al,BYTE PTR [rax]
 506:	00 00                	add    BYTE PTR [rax],al
 508:	10 00                	adc    BYTE PTR [rax],al
 50a:	00 00                	add    BYTE PTR [rax],al
 50c:	00 00                	add    BYTE PTR [rax],al
 50e:	00 00                	add    BYTE PTR [rax],al
 510:	75 1a                	jne    52c <__abi_tag+0x1a0>
 512:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 518:	2c 00                	sub    al,0x0
 51a:	00 00                	add    BYTE PTR [rax],al
 51c:	10 00                	adc    BYTE PTR [rax],al
 51e:	00 00                	add    BYTE PTR [rax],al
 520:	b4 91                	mov    ah,0x91
 522:	96                   	xchg   esi,eax
 523:	06                   	(bad)  
 524:	00 00                	add    BYTE PTR [rax],al
 526:	02 00                	add    al,BYTE PTR [rax]
 528:	38 00                	cmp    BYTE PTR [rax],al
 52a:	00 00                	add    BYTE PTR [rax],al
 52c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000530 <.rela.dyn>:
 530:	f0 3d 00 00 00 00    	lock cmp eax,0x0
 536:	00 00                	add    BYTE PTR [rax],al
 538:	08 00                	or     BYTE PTR [rax],al
 53a:	00 00                	add    BYTE PTR [rax],al
 53c:	00 00                	add    BYTE PTR [rax],al
 53e:	00 00                	add    BYTE PTR [rax],al
 540:	20 11                	and    BYTE PTR [rcx],dl
 542:	00 00                	add    BYTE PTR [rax],al
 544:	00 00                	add    BYTE PTR [rax],al
 546:	00 00                	add    BYTE PTR [rax],al
 548:	f8                   	clc    
 549:	3d 00 00 00 00       	cmp    eax,0x0
 54e:	00 00                	add    BYTE PTR [rax],al
 550:	08 00                	or     BYTE PTR [rax],al
 552:	00 00                	add    BYTE PTR [rax],al
 554:	00 00                	add    BYTE PTR [rax],al
 556:	00 00                	add    BYTE PTR [rax],al
 558:	e0 10                	loopne 56a <__abi_tag+0x1de>
 55a:	00 00                	add    BYTE PTR [rax],al
 55c:	00 00                	add    BYTE PTR [rax],al
 55e:	00 00                	add    BYTE PTR [rax],al
 560:	08 40 00             	or     BYTE PTR [rax+0x0],al
 563:	00 00                	add    BYTE PTR [rax],al
 565:	00 00                	add    BYTE PTR [rax],al
 567:	00 08                	add    BYTE PTR [rax],cl
 569:	00 00                	add    BYTE PTR [rax],al
 56b:	00 00                	add    BYTE PTR [rax],al
 56d:	00 00                	add    BYTE PTR [rax],al
 56f:	00 08                	add    BYTE PTR [rax],cl
 571:	40 00 00             	rex add BYTE PTR [rax],al
 574:	00 00                	add    BYTE PTR [rax],al
 576:	00 00                	add    BYTE PTR [rax],al
 578:	d8 3f                	fdivr  DWORD PTR [rdi]
 57a:	00 00                	add    BYTE PTR [rax],al
 57c:	00 00                	add    BYTE PTR [rax],al
 57e:	00 00                	add    BYTE PTR [rax],al
 580:	06                   	(bad)  
 581:	00 00                	add    BYTE PTR [rax],al
 583:	00 01                	add    BYTE PTR [rcx],al
	...
 58d:	00 00                	add    BYTE PTR [rax],al
 58f:	00 e0                	add    al,ah
 591:	3f                   	(bad)  
 592:	00 00                	add    BYTE PTR [rax],al
 594:	00 00                	add    BYTE PTR [rax],al
 596:	00 00                	add    BYTE PTR [rax],al
 598:	06                   	(bad)  
 599:	00 00                	add    BYTE PTR [rax],al
 59b:	00 02                	add    BYTE PTR [rdx],al
	...
 5a5:	00 00                	add    BYTE PTR [rax],al
 5a7:	00 e8                	add    al,ch
 5a9:	3f                   	(bad)  
 5aa:	00 00                	add    BYTE PTR [rax],al
 5ac:	00 00                	add    BYTE PTR [rax],al
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	06                   	(bad)  
 5b1:	00 00                	add    BYTE PTR [rax],al
 5b3:	00 03                	add    BYTE PTR [rbx],al
	...
 5bd:	00 00                	add    BYTE PTR [rax],al
 5bf:	00 f0                	add    al,dh
 5c1:	3f                   	(bad)  
 5c2:	00 00                	add    BYTE PTR [rax],al
 5c4:	00 00                	add    BYTE PTR [rax],al
 5c6:	00 00                	add    BYTE PTR [rax],al
 5c8:	06                   	(bad)  
 5c9:	00 00                	add    BYTE PTR [rax],al
 5cb:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 5d6:	00 00                	add    BYTE PTR [rax],al
 5d8:	f8                   	clc    
 5d9:	3f                   	(bad)  
 5da:	00 00                	add    BYTE PTR [rax],al
 5dc:	00 00                	add    BYTE PTR [rax],al
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	06                   	(bad)  
 5e1:	00 00                	add    BYTE PTR [rax],al
 5e3:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5e9 <__abi_tag+0x25d>
 5e9:	00 00                	add    BYTE PTR [rax],al
 5eb:	00 00                	add    BYTE PTR [rax],al
 5ed:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 d9 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 a2 2f 00 00    	push   QWORD PTR [rip+0x2fa2]        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 a3 2f 00 00 	bnd jmp QWORD PTR [rip+0x2fa3]        # 3fd0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nop    DWORD PTR [rax]

Disassembly of section .plt.got:

0000000000001030 <__cxa_finalize@plt>:
    1030:	f3 0f 1e fa          	endbr64 
    1034:	f2 ff 25 bd 2f 00 00 	bnd jmp QWORD PTR [rip+0x2fbd]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    103b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000001040 <_start>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	31 ed                	xor    ebp,ebp
    1046:	49 89 d1             	mov    r9,rdx
    1049:	5e                   	pop    rsi
    104a:	48 89 e2             	mov    rdx,rsp
    104d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    1051:	50                   	push   rax
    1052:	54                   	push   rsp
    1053:	45 31 c0             	xor    r8d,r8d
    1056:	31 c9                	xor    ecx,ecx
    1058:	48 8d 3d 40 01 00 00 	lea    rdi,[rip+0x140]        # 119f <main>
    105f:	ff 15 73 2f 00 00    	call   QWORD PTR [rip+0x2f73]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1065:	f4                   	hlt    
    1066:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    106d:	00 00 00 

0000000000001070 <deregister_tm_clones>:
    1070:	48 8d 3d 99 2f 00 00 	lea    rdi,[rip+0x2f99]        # 4010 <__TMC_END__>
    1077:	48 8d 05 92 2f 00 00 	lea    rax,[rip+0x2f92]        # 4010 <__TMC_END__>
    107e:	48 39 f8             	cmp    rax,rdi
    1081:	74 15                	je     1098 <deregister_tm_clones+0x28>
    1083:	48 8b 05 56 2f 00 00 	mov    rax,QWORD PTR [rip+0x2f56]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    108a:	48 85 c0             	test   rax,rax
    108d:	74 09                	je     1098 <deregister_tm_clones+0x28>
    108f:	ff e0                	jmp    rax
    1091:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1098:	c3                   	ret    
    1099:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000010a0 <register_tm_clones>:
    10a0:	48 8d 3d 69 2f 00 00 	lea    rdi,[rip+0x2f69]        # 4010 <__TMC_END__>
    10a7:	48 8d 35 62 2f 00 00 	lea    rsi,[rip+0x2f62]        # 4010 <__TMC_END__>
    10ae:	48 29 fe             	sub    rsi,rdi
    10b1:	48 89 f0             	mov    rax,rsi
    10b4:	48 c1 ee 3f          	shr    rsi,0x3f
    10b8:	48 c1 f8 03          	sar    rax,0x3
    10bc:	48 01 c6             	add    rsi,rax
    10bf:	48 d1 fe             	sar    rsi,1
    10c2:	74 14                	je     10d8 <register_tm_clones+0x38>
    10c4:	48 8b 05 25 2f 00 00 	mov    rax,QWORD PTR [rip+0x2f25]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    10cb:	48 85 c0             	test   rax,rax
    10ce:	74 08                	je     10d8 <register_tm_clones+0x38>
    10d0:	ff e0                	jmp    rax
    10d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    10d8:	c3                   	ret    
    10d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000010e0 <__do_global_dtors_aux>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	80 3d 25 2f 00 00 00 	cmp    BYTE PTR [rip+0x2f25],0x0        # 4010 <__TMC_END__>
    10eb:	75 2b                	jne    1118 <__do_global_dtors_aux+0x38>
    10ed:	55                   	push   rbp
    10ee:	48 83 3d 02 2f 00 00 	cmp    QWORD PTR [rip+0x2f02],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10f5:	00 
    10f6:	48 89 e5             	mov    rbp,rsp
    10f9:	74 0c                	je     1107 <__do_global_dtors_aux+0x27>
    10fb:	48 8b 3d 06 2f 00 00 	mov    rdi,QWORD PTR [rip+0x2f06]        # 4008 <__dso_handle>
    1102:	e8 29 ff ff ff       	call   1030 <__cxa_finalize@plt>
    1107:	e8 64 ff ff ff       	call   1070 <deregister_tm_clones>
    110c:	c6 05 fd 2e 00 00 01 	mov    BYTE PTR [rip+0x2efd],0x1        # 4010 <__TMC_END__>
    1113:	5d                   	pop    rbp
    1114:	c3                   	ret    
    1115:	0f 1f 00             	nop    DWORD PTR [rax]
    1118:	c3                   	ret    
    1119:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001120 <frame_dummy>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	e9 77 ff ff ff       	jmp    10a0 <register_tm_clones>

0000000000001129 <add>:
    1129:	f3 0f 1e fa          	endbr64 
    112d:	55                   	push   rbp
    112e:	48 89 e5             	mov    rbp,rsp
    1131:	f3 0f 11 45 ec       	movss  DWORD PTR [rbp-0x14],xmm0
    1136:	f3 0f 11 4d e8       	movss  DWORD PTR [rbp-0x18],xmm1
    113b:	f3 0f 10 45 ec       	movss  xmm0,DWORD PTR [rbp-0x14]
    1140:	f3 0f 58 45 e8       	addss  xmm0,DWORD PTR [rbp-0x18]
    1145:	f3 0f 11 45 fc       	movss  DWORD PTR [rbp-0x4],xmm0
    114a:	f3 0f 10 45 fc       	movss  xmm0,DWORD PTR [rbp-0x4]
    114f:	5d                   	pop    rbp
    1150:	c3                   	ret    

0000000000001151 <add_and_multiply>:
    1151:	f3 0f 1e fa          	endbr64 
    1155:	55                   	push   rbp
    1156:	48 89 e5             	mov    rbp,rsp
    1159:	48 83 ec 18          	sub    rsp,0x18
    115d:	f3 0f 11 45 ec       	movss  DWORD PTR [rbp-0x14],xmm0
    1162:	f3 0f 11 4d e8       	movss  DWORD PTR [rbp-0x18],xmm1
    1167:	f3 0f 10 45 e8       	movss  xmm0,DWORD PTR [rbp-0x18]
    116c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    116f:	0f 28 c8             	movaps xmm1,xmm0
    1172:	66 0f 6e c0          	movd   xmm0,eax
    1176:	e8 ae ff ff ff       	call   1129 <add>
    117b:	66 0f 7e c0          	movd   eax,xmm0
    117f:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    1182:	f3 0f 10 4d fc       	movss  xmm1,DWORD PTR [rbp-0x4]
    1187:	f3 0f 10 05 75 0e 00 	movss  xmm0,DWORD PTR [rip+0xe75]        # 2004 <_IO_stdin_used+0x4>
    118e:	00 
    118f:	f3 0f 59 c1          	mulss  xmm0,xmm1
    1193:	f3 0f 11 45 fc       	movss  DWORD PTR [rbp-0x4],xmm0
    1198:	f3 0f 10 45 fc       	movss  xmm0,DWORD PTR [rbp-0x4]
    119d:	c9                   	leave  
    119e:	c3                   	ret    

000000000000119f <main>:
    119f:	f3 0f 1e fa          	endbr64 
    11a3:	55                   	push   rbp
    11a4:	48 89 e5             	mov    rbp,rsp
    11a7:	48 83 ec 20          	sub    rsp,0x20
    11ab:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    11ae:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    11b2:	f3 0f 10 05 4e 0e 00 	movss  xmm0,DWORD PTR [rip+0xe4e]        # 2008 <_IO_stdin_used+0x8>
    11b9:	00 
    11ba:	f3 0f 11 45 f4       	movss  DWORD PTR [rbp-0xc],xmm0
    11bf:	f3 0f 10 05 45 0e 00 	movss  xmm0,DWORD PTR [rip+0xe45]        # 200c <_IO_stdin_used+0xc>
    11c6:	00 
    11c7:	f3 0f 11 45 f8       	movss  DWORD PTR [rbp-0x8],xmm0
    11cc:	f3 0f 10 45 f8       	movss  xmm0,DWORD PTR [rbp-0x8]
    11d1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    11d4:	0f 28 c8             	movaps xmm1,xmm0
    11d7:	66 0f 6e c0          	movd   xmm0,eax
    11db:	e8 71 ff ff ff       	call   1151 <add_and_multiply>
    11e0:	66 0f 7e c0          	movd   eax,xmm0
    11e4:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    11e7:	c7 05 23 2e 00 00 01 	mov    DWORD PTR [rip+0x2e23],0x1        # 4014 <nCompletionStatus>
    11ee:	00 00 00 
    11f1:	b8 00 00 00 00       	mov    eax,0x0
    11f6:	c9                   	leave  
    11f7:	c3                   	ret    

Disassembly of section .fini:

00000000000011f8 <_fini>:
    11f8:	f3 0f 1e fa          	endbr64 
    11fc:	48 83 ec 08          	sub    rsp,0x8
    1200:	48 83 c4 08          	add    rsp,0x8
    1204:	c3                   	ret    

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    DWORD PTR [rax],eax
    2002:	02 00                	add    al,BYTE PTR [rax]
    2004:	00 00                	add    BYTE PTR [rax],al
    2006:	40                   	rex
    2007:	40 00 00             	rex add BYTE PTR [rax],al
    200a:	80 3f 00             	cmp    BYTE PTR [rdi],0x0
    200d:	00                   	.byte 0x0
    200e:	a0                   	.byte 0xa0
    200f:	40                   	rex

Disassembly of section .eh_frame_hdr:

0000000000002010 <__GNU_EH_FRAME_HDR>:
    2010:	01 1b                	add    DWORD PTR [rbx],ebx
    2012:	03 3b                	add    edi,DWORD PTR [rbx]
    2014:	3c 00                	cmp    al,0x0
    2016:	00 00                	add    BYTE PTR [rax],al
    2018:	06                   	(bad)  
    2019:	00 00                	add    BYTE PTR [rax],al
    201b:	00 10                	add    BYTE PTR [rax],dl
    201d:	f0 ff                	lock (bad) 
    201f:	ff 70 00             	push   QWORD PTR [rax+0x0]
    2022:	00 00                	add    BYTE PTR [rax],al
    2024:	20 f0                	and    al,dh
    2026:	ff                   	(bad)  
    2027:	ff 98 00 00 00 30    	call   FWORD PTR [rax+0x30000000]
    202d:	f0 ff                	lock (bad) 
    202f:	ff 58 00             	call   FWORD PTR [rax+0x0]
    2032:	00 00                	add    BYTE PTR [rax],al
    2034:	19 f1                	sbb    ecx,esi
    2036:	ff                   	(bad)  
    2037:	ff b0 00 00 00 41    	push   QWORD PTR [rax+0x41000000]
    203d:	f1                   	int1   
    203e:	ff                   	(bad)  
    203f:	ff d0                	call   rax
    2041:	00 00                	add    BYTE PTR [rax],al
    2043:	00 8f f1 ff ff f0    	add    BYTE PTR [rdi-0xf00000f],cl
    2049:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .eh_frame:

0000000000002050 <__FRAME_END__-0xd0>:
    2050:	14 00                	adc    al,0x0
    2052:	00 00                	add    BYTE PTR [rax],al
    2054:	00 00                	add    BYTE PTR [rax],al
    2056:	00 00                	add    BYTE PTR [rax],al
    2058:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    205b:	00 01                	add    BYTE PTR [rcx],al
    205d:	78 10                	js     206f <__GNU_EH_FRAME_HDR+0x5f>
    205f:	01 1b                	add    DWORD PTR [rbx],ebx
    2061:	0c 07                	or     al,0x7
    2063:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    2069:	00 00                	add    BYTE PTR [rax],al
    206b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    206e:	00 00                	add    BYTE PTR [rax],al
    2070:	d0 ef                	shr    bh,1
    2072:	ff                   	(bad)  
    2073:	ff 26                	jmp    QWORD PTR [rsi]
    2075:	00 00                	add    BYTE PTR [rax],al
    2077:	00 00                	add    BYTE PTR [rax],al
    2079:	44 07                	rex.R (bad) 
    207b:	10 00                	adc    BYTE PTR [rax],al
    207d:	00 00                	add    BYTE PTR [rax],al
    207f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    2082:	00 00                	add    BYTE PTR [rax],al
    2084:	34 00                	xor    al,0x0
    2086:	00 00                	add    BYTE PTR [rax],al
    2088:	98                   	cwde   
    2089:	ef                   	out    dx,eax
    208a:	ff                   	(bad)  
    208b:	ff 10                	call   QWORD PTR [rax]
    208d:	00 00                	add    BYTE PTR [rax],al
    208f:	00 00                	add    BYTE PTR [rax],al
    2091:	0e                   	(bad)  
    2092:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    2095:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    2098:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    209b:	80 00 3f             	add    BYTE PTR [rax],0x3f
    209e:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    20a0:	2a 33                	sub    dh,BYTE PTR [rbx]
    20a2:	24 22                	and    al,0x22
    20a4:	00 00                	add    BYTE PTR [rax],al
    20a6:	00 00                	add    BYTE PTR [rax],al
    20a8:	14 00                	adc    al,0x0
    20aa:	00 00                	add    BYTE PTR [rax],al
    20ac:	5c                   	pop    rsp
    20ad:	00 00                	add    BYTE PTR [rax],al
    20af:	00 80 ef ff ff 10    	add    BYTE PTR [rax+0x10ffffef],al
	...
    20bd:	00 00                	add    BYTE PTR [rax],al
    20bf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    20c2:	00 00                	add    BYTE PTR [rax],al
    20c4:	74 00                	je     20c6 <__GNU_EH_FRAME_HDR+0xb6>
    20c6:	00 00                	add    BYTE PTR [rax],al
    20c8:	61                   	(bad)  
    20c9:	f0 ff                	lock (bad) 
    20cb:	ff 28                	jmp    FWORD PTR [rax]
    20cd:	00 00                	add    BYTE PTR [rax],al
    20cf:	00 00                	add    BYTE PTR [rax],al
    20d1:	45 0e                	rex.RB (bad) 
    20d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    20d9:	5f                   	pop    rdi
    20da:	0c 07                	or     al,0x7
    20dc:	08 00                	or     BYTE PTR [rax],al
    20de:	00 00                	add    BYTE PTR [rax],al
    20e0:	1c 00                	sbb    al,0x0
    20e2:	00 00                	add    BYTE PTR [rax],al
    20e4:	94                   	xchg   esp,eax
    20e5:	00 00                	add    BYTE PTR [rax],al
    20e7:	00 69 f0             	add    BYTE PTR [rcx-0x10],ch
    20ea:	ff                   	(bad)  
    20eb:	ff 4e 00             	dec    DWORD PTR [rsi+0x0]
    20ee:	00 00                	add    BYTE PTR [rax],al
    20f0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    20f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    20f9:	02 45 0c             	add    al,BYTE PTR [rbp+0xc]
    20fc:	07                   	(bad)  
    20fd:	08 00                	or     BYTE PTR [rax],al
    20ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    2102:	00 00                	add    BYTE PTR [rax],al
    2104:	b4 00                	mov    ah,0x0
    2106:	00 00                	add    BYTE PTR [rax],al
    2108:	97                   	xchg   edi,eax
    2109:	f0 ff                	lock (bad) 
    210b:	ff 59 00             	call   FWORD PTR [rcx+0x0]
    210e:	00 00                	add    BYTE PTR [rax],al
    2110:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    2113:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    2119:	02 50 0c             	add    dl,BYTE PTR [rax+0xc]
    211c:	07                   	(bad)  
    211d:	08 00                	or     BYTE PTR [rax],al
	...

0000000000002120 <__FRAME_END__>:
    2120:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000003df0 <__frame_dummy_init_array_entry>:
    3df0:	20 11                	and    BYTE PTR [rcx],dl
    3df2:	00 00                	add    BYTE PTR [rax],al
    3df4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000003df8 <__do_global_dtors_aux_fini_array_entry>:
    3df8:	e0 10                	loopne 3e0a <_DYNAMIC+0xa>
    3dfa:	00 00                	add    BYTE PTR [rax],al
    3dfc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000003e00 <_DYNAMIC>:
    3e00:	01 00                	add    DWORD PTR [rax],eax
    3e02:	00 00                	add    BYTE PTR [rax],al
    3e04:	00 00                	add    BYTE PTR [rax],al
    3e06:	00 00                	add    BYTE PTR [rax],al
    3e08:	22 00                	and    al,BYTE PTR [rax]
    3e0a:	00 00                	add    BYTE PTR [rax],al
    3e0c:	00 00                	add    BYTE PTR [rax],al
    3e0e:	00 00                	add    BYTE PTR [rax],al
    3e10:	0c 00                	or     al,0x0
    3e12:	00 00                	add    BYTE PTR [rax],al
    3e14:	00 00                	add    BYTE PTR [rax],al
    3e16:	00 00                	add    BYTE PTR [rax],al
    3e18:	00 10                	add    BYTE PTR [rax],dl
    3e1a:	00 00                	add    BYTE PTR [rax],al
    3e1c:	00 00                	add    BYTE PTR [rax],al
    3e1e:	00 00                	add    BYTE PTR [rax],al
    3e20:	0d 00 00 00 00       	or     eax,0x0
    3e25:	00 00                	add    BYTE PTR [rax],al
    3e27:	00 f8                	add    al,bh
    3e29:	11 00                	adc    DWORD PTR [rax],eax
    3e2b:	00 00                	add    BYTE PTR [rax],al
    3e2d:	00 00                	add    BYTE PTR [rax],al
    3e2f:	00 19                	add    BYTE PTR [rcx],bl
    3e31:	00 00                	add    BYTE PTR [rax],al
    3e33:	00 00                	add    BYTE PTR [rax],al
    3e35:	00 00                	add    BYTE PTR [rax],al
    3e37:	00 f0                	add    al,dh
    3e39:	3d 00 00 00 00       	cmp    eax,0x0
    3e3e:	00 00                	add    BYTE PTR [rax],al
    3e40:	1b 00                	sbb    eax,DWORD PTR [rax]
    3e42:	00 00                	add    BYTE PTR [rax],al
    3e44:	00 00                	add    BYTE PTR [rax],al
    3e46:	00 00                	add    BYTE PTR [rax],al
    3e48:	08 00                	or     BYTE PTR [rax],al
    3e4a:	00 00                	add    BYTE PTR [rax],al
    3e4c:	00 00                	add    BYTE PTR [rax],al
    3e4e:	00 00                	add    BYTE PTR [rax],al
    3e50:	1a 00                	sbb    al,BYTE PTR [rax]
    3e52:	00 00                	add    BYTE PTR [rax],al
    3e54:	00 00                	add    BYTE PTR [rax],al
    3e56:	00 00                	add    BYTE PTR [rax],al
    3e58:	f8                   	clc    
    3e59:	3d 00 00 00 00       	cmp    eax,0x0
    3e5e:	00 00                	add    BYTE PTR [rax],al
    3e60:	1c 00                	sbb    al,0x0
    3e62:	00 00                	add    BYTE PTR [rax],al
    3e64:	00 00                	add    BYTE PTR [rax],al
    3e66:	00 00                	add    BYTE PTR [rax],al
    3e68:	08 00                	or     BYTE PTR [rax],al
    3e6a:	00 00                	add    BYTE PTR [rax],al
    3e6c:	00 00                	add    BYTE PTR [rax],al
    3e6e:	00 00                	add    BYTE PTR [rax],al
    3e70:	f5                   	cmc    
    3e71:	fe                   	(bad)  
    3e72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e75:	00 00                	add    BYTE PTR [rax],al
    3e77:	00 b0 03 00 00 00    	add    BYTE PTR [rax+0x3],dh
    3e7d:	00 00                	add    BYTE PTR [rax],al
    3e7f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3e85 <_DYNAMIC+0x85>
    3e85:	00 00                	add    BYTE PTR [rax],al
    3e87:	00 68 04             	add    BYTE PTR [rax+0x4],ch
    3e8a:	00 00                	add    BYTE PTR [rax],al
    3e8c:	00 00                	add    BYTE PTR [rax],al
    3e8e:	00 00                	add    BYTE PTR [rax],al
    3e90:	06                   	(bad)  
    3e91:	00 00                	add    BYTE PTR [rax],al
    3e93:	00 00                	add    BYTE PTR [rax],al
    3e95:	00 00                	add    BYTE PTR [rax],al
    3e97:	00 d8                	add    al,bl
    3e99:	03 00                	add    eax,DWORD PTR [rax]
    3e9b:	00 00                	add    BYTE PTR [rax],al
    3e9d:	00 00                	add    BYTE PTR [rax],al
    3e9f:	00 0a                	add    BYTE PTR [rdx],cl
    3ea1:	00 00                	add    BYTE PTR [rax],al
    3ea3:	00 00                	add    BYTE PTR [rax],al
    3ea5:	00 00                	add    BYTE PTR [rax],al
    3ea7:	00 88 00 00 00 00    	add    BYTE PTR [rax+0x0],cl
    3ead:	00 00                	add    BYTE PTR [rax],al
    3eaf:	00 0b                	add    BYTE PTR [rbx],cl
    3eb1:	00 00                	add    BYTE PTR [rax],al
    3eb3:	00 00                	add    BYTE PTR [rax],al
    3eb5:	00 00                	add    BYTE PTR [rax],al
    3eb7:	00 18                	add    BYTE PTR [rax],bl
    3eb9:	00 00                	add    BYTE PTR [rax],al
    3ebb:	00 00                	add    BYTE PTR [rax],al
    3ebd:	00 00                	add    BYTE PTR [rax],al
    3ebf:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 3ec5 <_DYNAMIC+0xc5>
	...
    3ecd:	00 00                	add    BYTE PTR [rax],al
    3ecf:	00 03                	add    BYTE PTR [rbx],al
    3ed1:	00 00                	add    BYTE PTR [rax],al
    3ed3:	00 00                	add    BYTE PTR [rax],al
    3ed5:	00 00                	add    BYTE PTR [rax],al
    3ed7:	00 c0                	add    al,al
    3ed9:	3f                   	(bad)  
    3eda:	00 00                	add    BYTE PTR [rax],al
    3edc:	00 00                	add    BYTE PTR [rax],al
    3ede:	00 00                	add    BYTE PTR [rax],al
    3ee0:	07                   	(bad)  
    3ee1:	00 00                	add    BYTE PTR [rax],al
    3ee3:	00 00                	add    BYTE PTR [rax],al
    3ee5:	00 00                	add    BYTE PTR [rax],al
    3ee7:	00 30                	add    BYTE PTR [rax],dh
    3ee9:	05 00 00 00 00       	add    eax,0x0
    3eee:	00 00                	add    BYTE PTR [rax],al
    3ef0:	08 00                	or     BYTE PTR [rax],al
    3ef2:	00 00                	add    BYTE PTR [rax],al
    3ef4:	00 00                	add    BYTE PTR [rax],al
    3ef6:	00 00                	add    BYTE PTR [rax],al
    3ef8:	c0 00 00             	rol    BYTE PTR [rax],0x0
    3efb:	00 00                	add    BYTE PTR [rax],al
    3efd:	00 00                	add    BYTE PTR [rax],al
    3eff:	00 09                	add    BYTE PTR [rcx],cl
    3f01:	00 00                	add    BYTE PTR [rax],al
    3f03:	00 00                	add    BYTE PTR [rax],al
    3f05:	00 00                	add    BYTE PTR [rax],al
    3f07:	00 18                	add    BYTE PTR [rax],bl
    3f09:	00 00                	add    BYTE PTR [rax],al
    3f0b:	00 00                	add    BYTE PTR [rax],al
    3f0d:	00 00                	add    BYTE PTR [rax],al
    3f0f:	00 1e                	add    BYTE PTR [rsi],bl
    3f11:	00 00                	add    BYTE PTR [rax],al
    3f13:	00 00                	add    BYTE PTR [rax],al
    3f15:	00 00                	add    BYTE PTR [rax],al
    3f17:	00 08                	add    BYTE PTR [rax],cl
    3f19:	00 00                	add    BYTE PTR [rax],al
    3f1b:	00 00                	add    BYTE PTR [rax],al
    3f1d:	00 00                	add    BYTE PTR [rax],al
    3f1f:	00 fb                	add    bl,bh
    3f21:	ff                   	(bad)  
    3f22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f25:	00 00                	add    BYTE PTR [rax],al
    3f27:	00 01                	add    BYTE PTR [rcx],al
    3f29:	00 00                	add    BYTE PTR [rax],al
    3f2b:	08 00                	or     BYTE PTR [rax],al
    3f2d:	00 00                	add    BYTE PTR [rax],al
    3f2f:	00 fe                	add    dh,bh
    3f31:	ff                   	(bad)  
    3f32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f35:	00 00                	add    BYTE PTR [rax],al
    3f37:	00 00                	add    BYTE PTR [rax],al
    3f39:	05 00 00 00 00       	add    eax,0x0
    3f3e:	00 00                	add    BYTE PTR [rax],al
    3f40:	ff                   	(bad)  
    3f41:	ff                   	(bad)  
    3f42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f45:	00 00                	add    BYTE PTR [rax],al
    3f47:	00 01                	add    BYTE PTR [rcx],al
    3f49:	00 00                	add    BYTE PTR [rax],al
    3f4b:	00 00                	add    BYTE PTR [rax],al
    3f4d:	00 00                	add    BYTE PTR [rax],al
    3f4f:	00 f0                	add    al,dh
    3f51:	ff                   	(bad)  
    3f52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f55:	00 00                	add    BYTE PTR [rax],al
    3f57:	00 f0                	add    al,dh
    3f59:	04 00                	add    al,0x0
    3f5b:	00 00                	add    BYTE PTR [rax],al
    3f5d:	00 00                	add    BYTE PTR [rax],al
    3f5f:	00 f9                	add    cl,bh
    3f61:	ff                   	(bad)  
    3f62:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f65:	00 00                	add    BYTE PTR [rax],al
    3f67:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000003fc0 <_GLOBAL_OFFSET_TABLE_>:
    3fc0:	00 3e                	add    BYTE PTR [rsi],bh
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     BYTE PTR [rax+0x0],al
    400b:	00 00                	add    BYTE PTR [rax],al
    400d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000004010 <completed.0>:
    4010:	00 00                	add    BYTE PTR [rax],al
	...

0000000000004014 <nCompletionStatus>:
    4014:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <__abi_tag-0x314>
   a:	74 75                	je     81 <__abi_tag-0x30b>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	31 2e                	xor    DWORD PTR [rsi],ebp
  10:	34 2e                	xor    al,0x2e
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x75623531>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <__abi_tag-0x2fc>
  1b:	31 7e 32             	xor    DWORD PTR [rsi+0x32],edi
  1e:	32 2e                	xor    ch,BYTE PTR [rsi]
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 31                	and    BYTE PTR [rcx],dh
  25:	31 2e                	xor    DWORD PTR [rsi],ebp
  27:	34 2e                	xor    al,0x2e
  29:	30 00                	xor    BYTE PTR [rax],al
